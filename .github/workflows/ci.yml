name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Debug environment (macOS only)
      if: runner.os == 'macOS'
      run: |
        echo "PATH: $PATH"
        echo "Home: $HOME"
        which cargo || echo "cargo not found"
        which rustc || echo "rustc not found"
        ls -la ~/.cargo/bin/ || echo "~/.cargo/bin/ not found"
      
    - name: Set up Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy, rustfmt
        
    - name: Verify Rust installation
      run: |
        rustc --version
        cargo --version
        
    - name: Add cargo to PATH (macOS)
      if: runner.os == 'macOS'
      run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Run cargo check
      run: cargo check --verbose
      
    - name: Run cargo test
      run: cargo test --verbose
      
    - name: Run cargo clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
      
    - name: Run cargo fmt check
      run: cargo fmt --all -- --check